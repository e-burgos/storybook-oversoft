import React, { useState } from 'react';
import { StyledSvgCopyCircle } from './CopyCircle.styles';
import colors from '../../color-palette';

export interface CopyCircleProps {
  size?: number;
  bgColor?: string;
  iconColor?: string;
  active?: boolean;
  onClick?: () => void;
}

const CopyCircle = ({ size, active, bgColor, iconColor, onClick: handleClick }: CopyCircleProps) => {
  const [hover, setHover] = useState<boolean>(false);
  return (
    <StyledSvgCopyCircle
      width={size ? size : 30}
      viewBox="0 0 30 30"
      data-testid="CopyCircle"
      fill="none"
      onMouseEnter={() => setHover(true)}
      onMouseLeave={() => setHover(false)}
      onClick={handleClick}
    >
      <circle
        cx="15"
        cy="15"
        r="15"
        data-testid="CircleCopyCircle"
        fill={active ? colors.primary.red : bgColor ? bgColor : hover ? colors.primary.red : colors.neutrals.white}
      />

      <path
        d="M10.147 10.3364L11.7983 8.59337C12.1058 8.26744 12.4715 8.00904 12.8742 7.8331C13.2769 7.65716 13.7087 7.56719 14.1446 7.56837H16.2846C16.9129 7.56916 17.5153 7.83281 17.9596 8.30148C18.4039 8.77015 18.6538 9.40557 18.6545 10.0684V17.0684C18.6538 17.7312 18.4039 18.3666 17.9596 18.8353C17.5153 19.3039 16.9129 19.5676 16.2846 19.5684H11.5448C10.9164 19.5676 10.3141 19.3039 9.8698 18.8353C9.42551 18.3666 9.17558 17.7312 9.17483 17.0684V12.8109C9.17365 12.3511 9.25897 11.8956 9.42584 11.4709C9.59271 11.0461 9.83782 10.6605 10.147 10.3364ZM10.8172 11.0434C10.6725 11.2004 10.548 11.377 10.447 11.5684H12.4927C12.6184 11.5684 12.739 11.5157 12.8279 11.4219C12.9168 11.3282 12.9667 11.201 12.9667 11.0684V8.91037C12.7852 9.01683 12.6177 9.14795 12.4686 9.30037L10.8172 11.0434ZM10.1228 17.0684C10.1228 17.4662 10.2726 17.8477 10.5393 18.129C10.8059 18.4103 11.1676 18.5684 11.5448 18.5684H16.2846C16.6617 18.5684 17.0234 18.4103 17.2901 18.129C17.5568 17.8477 17.7066 17.4662 17.7066 17.0684V10.0684C17.7066 9.67055 17.5568 9.28902 17.2901 9.00771C17.0234 8.72641 16.6617 8.56837 16.2846 8.56837H14.1446C14.0668 8.56837 13.9915 8.58437 13.9147 8.59187V11.0684C13.9147 11.4662 13.7649 11.8477 13.4982 12.129C13.2315 12.4103 12.8699 12.5684 12.4927 12.5684H10.1451C10.138 12.6494 10.1228 12.7284 10.1228 12.8109V17.0684Z"
        data-testid="PathCopyCircle"
        fill={
          active ? colors.neutrals.white : iconColor ? iconColor : hover ? colors.neutrals.white : colors.neutrals.black
        }
      />
      <path
        d="M12.4946 14.1176L14.146 12.3746C14.4535 12.0487 14.8191 11.7903 15.2218 11.6144C15.6246 11.4384 16.0563 11.3484 16.4922 11.3496H18.6323C19.2606 11.3504 19.8629 11.6141 20.3072 12.0827C20.7515 12.5514 21.0014 13.1868 21.0022 13.8496V20.8496C21.0014 21.5124 20.7515 22.1478 20.3072 22.6165C19.8629 23.0852 19.2606 23.3488 18.6323 23.3496H13.8924C13.2641 23.3488 12.6617 23.0852 12.2175 22.6165C11.7732 22.1478 11.5232 21.5124 11.5225 20.8496V16.5921C11.5213 16.1323 11.6066 15.6769 11.7735 15.2521C11.9404 14.8273 12.1855 14.4417 12.4946 14.1176ZM13.1648 14.8246C13.0201 14.9817 12.8956 15.1582 12.7947 15.3496H14.8404C14.9661 15.3496 15.0867 15.2969 15.1755 15.2032C15.2644 15.1094 15.3144 14.9822 15.3144 14.8496V12.6916C15.1329 12.7981 14.9654 12.9292 14.8162 13.0816L13.1648 14.8246ZM12.4705 20.8496C12.4705 21.2474 12.6203 21.629 12.8869 21.9103C13.1536 22.1916 13.5153 22.3496 13.8924 22.3496H18.6323C19.0094 22.3496 19.3711 22.1916 19.6377 21.9103C19.9044 21.629 20.0542 21.2474 20.0542 20.8496V13.8496C20.0542 13.4518 19.9044 13.0703 19.6377 12.789C19.3711 12.5077 19.0094 12.3496 18.6323 12.3496H16.4922C16.4145 12.3496 16.3391 12.3656 16.2623 12.3731V14.8496C16.2623 15.2474 16.1125 15.629 15.8459 15.9103C15.5792 16.1916 15.2175 16.3496 14.8404 16.3496H12.4927C12.4856 16.4306 12.4705 16.5096 12.4705 16.5921V20.8496Z"
        data-testid="PathCopyCircle-2"
        fill={
          active ? colors.neutrals.white : iconColor ? iconColor : hover ? colors.neutrals.white : colors.neutrals.black
        }
      />
    </StyledSvgCopyCircle>
  );
};

export default CopyCircle;
